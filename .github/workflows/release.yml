name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version (SemVer)"
        required: true
        default: 0.0.0

jobs:
  set-version:
    name: Update version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.BOT_TOKEN }}

      - name: Install required dependencies
        run: npm install

      - name: Update package version
        run: npm version ${{ github.event.inputs.version }} --git-tag-version=false

      - name: Add corresponding commit
        run: |
          git config --global user.name 'OpenFoxes Maintenance Bot'
          git config --global user.email 'openfoxes@bono-fox.de'
          git init
          git add .
          git commit -m "ðŸ”– Release ${{  github.event.inputs.version }}" -m "- Updated documentation"
          git tag v${{  github.event.inputs.version }}
          git push -u origin HEAD:main --tags

      - name: Upload the working directory with the new version
        uses: actions/upload-artifact@v4
        with:
          name: versioned-build
          include-hidden-files: true
          path: .
          retention-days: 1

  create-npm-release:
    name: "Create NPM release"
    runs-on: ubuntu-latest
    needs: [set-version]
    steps:
      - name: Download the versioned working directory
        uses: actions/download-artifact@v4
        with:
          name: versioned-build
          path: .

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Prepare NPM credentials
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> .npmrc
          echo email=${{ secrets.NPM_EMAIL }} >> .npmrc
          echo always-auth=true >> .npmrc

      - name: Publish to NPM
        run: npm publish --access=public --verbose

  create-github-release:
    name: "Create GitHub release"
    runs-on: ubuntu-latest
    needs: [create-npm-release]
    steps:
      - name: Download the versioned working directory
        uses: actions/download-artifact@v4
        with:
          name: versioned-build
          path: .

      - uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.BOT_TOKEN }}
          name: Version ${{  github.event.inputs.version }}
          tag_name: v${{  github.event.inputs.version }}